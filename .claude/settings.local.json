{
  "permissions": {
    "allow": [
      "Bash(npm run dev:*)",
      "Bash(npx next build:*)",
      "Bash(npm run check:translations:*)",
      "Bash(npm run fix:translations:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(rg:*)",
      "Bash(npm run build:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run:*)",
      "Bash(rm:*)",
      "Bash(for file in /Users/al/Developer/CDLHelp/CDLHelp-website/data/pre-trip/*.json)",
      "Bash(do echo \"Checking $file\")",
      "Bash(python3:*)",
      "Bash(echo:*)",
      "Bash(done)",
      "Bash(for:*)",
      "Bash(do echo -n \"Testing $f: \")",
      "Bash(jq:*)",
      "Bash(/dev/null)",
      "Bash(xmllint:*)",
      "Bash(kill:*)",
      "Bash(mv:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(npm cache clean:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(npx eslint:*)",
      "Bash(if [ -z \"$STRAPI_API_KEY\" ])",
      "Bash(then echo \"STRAPI_API_KEY not set\")",
      "Bash(else echo \"STRAPI_API_KEY is set\")",
      "Bash(fi)",
      "Bash(git rm:*)",
      "Bash(npx husky:*)",
      "Bash(npm uninstall:*)",
      "Bash(npx prettier:*)",
      "Bash(sed:*)",
      "Bash(npx sass:*)",
      "Bash(PGPASSWORD=TruckDr1ver12358! psql:*)",
      "Bash(npm install:*)",
      "Bash(git restore:*)",
      "WebSearch",
      "Bash(git config:*)",
      "Bash(do)",
      "Bash(if [[ \"$file\" != *\"ru.xml.js\" ]])",
      "Bash(then)",
      "WebFetch(domain:www.cdlhelp.com)",
      "WebFetch(domain:www.cdlhelp.com)",
      "WebFetch(domain:www.cdlhelp.com)",
      "WebFetch(domain:www.cdlhelp.com)",
      "WebFetch(domain:www.cdlhelp.com)",
      "Bash(do basename \"$file\" .json)",
      "Bash(touch:*)",
      "Bash(do echo \"Cleaning $file\")",
      "Bash(do echo \"Fixing $file\")",
      "Bash(git checkout:*)",
      "Bash(do echo \"Checking $dir\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}
